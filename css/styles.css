html {
	font-size: 62.5%;
    /*all things based to a 10px size reset*/
}

/* mobile first css */
body {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 1.6rem;
    background-color: #192f5e;
}

/****STEP ONE styling the default or generic state of the navigation - mobile first****/

header {
	background-color: #fff; /*Temporary while building*/
	padding: 2%;
}

.flex-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

header a {
    color: #3f3f3f;
    text-decoration: none;
    display: block; /***allows the clickable area to fill the container "li" not needing padding, etc***/

}

.menu a:hover,
.menu a:active {
    background-color: gainsboro;
    border-radius: 4px;
}

.toggle-btn {
    border: none;
    background-color: #fff;
    outline: none; /*This is there when tabbing */
}

.toggle-btn:hover {
    cursor: pointer; /* makes the cursor into pointer finger icon (user knows it is clickable) and piece of navigation*/
}

svg rect {
    fill: #3f3f3f; /* how to change color of SVG */
}

.menu li {
    line-height: 4rem; /* Use line-height to increase height: of li */
    text-align: center;
    }

header nav {
/*STEP TWO: This element will overlap the main content area. 
This element does not have a parent container that position relative. 
Therefore, it is positioned realative to the browser screen. */

    position: absolute;
    top: 4.90rem; /*the height of the closed header*/
    left: 0;
    /*Once positioned absolute - the header dosent see it anymore so it loses itsd bg color. put it back. */
    background-color: rgba(255, 255, 255, 1);
    width: 100vw;
    overflow: hidden;
    max-height: 0;
    transition: max-height 0.7s ease-in-out;
    }

    ul.menu{
        padding-bottom: 1rem; /*To make it all fit*/
    }
    /*Add accessibility with the focus-within state on the li's which will target the anchor tags inside. 
    This is for tabbed navigation for screen readers. */
    ul.menu li:focus-within >ul, 
    ul.menu li > ul{
        visibility: visible;
        opacity: 1;
        display: block;
    }

    .show-nav{
    /*This class exists ONLY in the CSS file. 
     The Java script will add it swapping it with 'toggle-nav' using the classList method.*/
    max-height: 20rem;
    }

/* ************************* section ****************** */
section {
    padding: 3.125rem;
    text-align: center;
    text-transform: uppercase;
}

section p {
    color: #d5e294;
    border-bottom: 2px solid #d5e294;
    padding-bottom: 10px;
    margin-bottom: 10px;
    font-size: 1.777rem;
}

section h2,
footer {
    color: #fff;
    font-size: 3.157rem;
    margin-bottom: 2rem;
}

/*--- Footer --- */
footer {
    text-align: center;
    position: -webkit-sticky;
    position: sticky;
}


/**** STEP THREE: hide the menu. This will be the default stage. 
note: the display:none property cannot be transitioned ****/

@media only screen and (min-width: 520px) {
        .toggle-btn {
            display: none;
        }
        /*We want to see the header nav again, so give it a height */
        /*reset the position value and the width*/
        header nav{
            position: static;
            width: auto;
            max-height: 20rem;
            overflow: visible;

        }
        .menu /*becomes full screen now*/,
        header {
            display: flex;
            justify-content: space-between;
        }

        .menu li {
            margin-left: 0.5rem;
        }

        .menu li a {
            padding: 0.5rem; 
       }
}

@media only screen and (min-width: 1300px) {
        header {
            width: 1300px;
            margin: 0 auto;
        }
    }